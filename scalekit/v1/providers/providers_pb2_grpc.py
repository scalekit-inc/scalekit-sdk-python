# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from scalekit.v1.providers import providers_pb2 as scalekit_dot_v1_dot_providers_dot_providers__pb2


class ProviderServiceStub(object):
    """Service definition
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProvider = channel.unary_unary(
                '/scalekit.v1.providers.ProviderService/CreateProvider',
                request_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.CreateProviderRequest.SerializeToString,
                response_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.CreateProviderResponse.FromString,
                )
        self.UpdateProvider = channel.unary_unary(
                '/scalekit.v1.providers.ProviderService/UpdateProvider',
                request_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.UpdateProviderRequest.SerializeToString,
                response_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.UpdateProviderResponse.FromString,
                )
        self.DeleteProvider = channel.unary_unary(
                '/scalekit.v1.providers.ProviderService/DeleteProvider',
                request_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.DeleteProviderRequest.SerializeToString,
                response_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.DeleteProviderResponse.FromString,
                )
        self.ListProviders = channel.unary_unary(
                '/scalekit.v1.providers.ProviderService/ListProviders',
                request_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.ListProvidersRequest.SerializeToString,
                response_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.ListProvidersResponse.FromString,
                )


class ProviderServiceServicer(object):
    """Service definition
    """

    def CreateProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProvider(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProviders(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProviderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProvider,
                    request_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.CreateProviderRequest.FromString,
                    response_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.CreateProviderResponse.SerializeToString,
            ),
            'UpdateProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProvider,
                    request_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.UpdateProviderRequest.FromString,
                    response_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.UpdateProviderResponse.SerializeToString,
            ),
            'DeleteProvider': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProvider,
                    request_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.DeleteProviderRequest.FromString,
                    response_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.DeleteProviderResponse.SerializeToString,
            ),
            'ListProviders': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProviders,
                    request_deserializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.ListProvidersRequest.FromString,
                    response_serializer=scalekit_dot_v1_dot_providers_dot_providers__pb2.ListProvidersResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'scalekit.v1.providers.ProviderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ProviderService(object):
    """Service definition
    """

    @staticmethod
    def CreateProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scalekit.v1.providers.ProviderService/CreateProvider',
            scalekit_dot_v1_dot_providers_dot_providers__pb2.CreateProviderRequest.SerializeToString,
            scalekit_dot_v1_dot_providers_dot_providers__pb2.CreateProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scalekit.v1.providers.ProviderService/UpdateProvider',
            scalekit_dot_v1_dot_providers_dot_providers__pb2.UpdateProviderRequest.SerializeToString,
            scalekit_dot_v1_dot_providers_dot_providers__pb2.UpdateProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DeleteProvider(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scalekit.v1.providers.ProviderService/DeleteProvider',
            scalekit_dot_v1_dot_providers_dot_providers__pb2.DeleteProviderRequest.SerializeToString,
            scalekit_dot_v1_dot_providers_dot_providers__pb2.DeleteProviderResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ListProviders(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/scalekit.v1.providers.ProviderService/ListProviders',
            scalekit_dot_v1_dot_providers_dot_providers__pb2.ListProvidersRequest.SerializeToString,
            scalekit_dot_v1_dot_providers_dot_providers__pb2.ListProvidersResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
