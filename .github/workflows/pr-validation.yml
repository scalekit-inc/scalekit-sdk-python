name: PR Validation

on:
  pull_request:
    branches: [ main, develop ]
  push:                    # Add this line
    branches: [ main, develop ]
  workflow_dispatch:

jobs:
  python-compatibility:
    name: Python ${{ matrix.python-version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false  # Continue testing other versions if one fails
      matrix:
        python-version: [3.10, 3.11, 3.12, 3.13]
        os: [ubuntu-latest, macos-latest, windows-latest]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/setup.py', '**/pyproject.toml') }}
        restore-keys: |
          ${{ runner.os }}-pip-${{ matrix.python-version }}-
          ${{ runner.os }}-pip-
    
    - name: Upgrade pip and setuptools
      run: |
        python -m pip install --upgrade pip
        pip install --upgrade setuptools wheel
    
    - name: Install dependencies
      run: |
        pip install -e .
        pip install pytest pytest-cov flake8 mypy
    
    - name: Test critical imports (Python 3.10+ compatibility)
      run: |
        echo "Testing critical imports for Python 3.10+ compatibility..."
        python test_import_only.py
    
    - name: Run existing tests
      run: |
        echo "Running existing test suite..."
        if [ -d "tests" ]; then
          python -m pytest tests/ -v --tb=short
        else
          echo "No tests directory found, skipping test suite"
        fi
    
    - name: Code quality check (flake8)
      run: |
        echo "Running code quality checks..."
        flake8 scalekit/ --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 scalekit/ --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    
    - name: Type checking (mypy)
      run: |
        echo "Running type checking..."
        mypy scalekit/ --ignore-missing-imports --no-strict-optional || echo "Type checking completed with warnings"

  compatibility-summary:
    name: Compatibility Summary
    runs-on: ubuntu-latest
    needs: python-compatibility
    if: always()
    
    steps:
    - name: Check compatibility status
      run: |
        echo "## Python Compatibility Check Results" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        
        if [ "${{ needs.python-compatibility.result }}" == "success" ]; then
          echo "✅ **All Python versions (3.10+) are compatible**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Python Version | Ubuntu | macOS | Windows | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|----------------|--------|-------|---------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| 3.10 | ✅ | ✅ | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.11 | ✅ | ✅ | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.12 | ✅ | ✅ | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "| 3.13 | ✅ | ✅ | ✅ | ✅ |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "🎉 **This PR is ready to merge!**" >> $GITHUB_STEP_SUMMARY
        else
          echo "❌ **Python compatibility issues detected**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Please check the failed tests above and fix the compatibility issues before merging." >> $GITHUB_STEP_SUMMARY
        fi
