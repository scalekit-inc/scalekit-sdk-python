syntax = "proto3";

package scalekit.v1.members;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/members";

service MembersService {
  // For the first closed beta build, we are not exposing the ability to create members. So, most of the APIs will have
  // WORKSPACE auth scope. when we release the members UI, we need to update those APIs to WORKSPACE_SESSION scope.

  rpc CreateMember(CreateMemberRequest) returns (CreateMemberResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};
    option (google.api.http) = {
      post: "/api/v1/members"
      body: "member"
    };
  }

  rpc UpdateCurrentMember(UpdateCurrentMemberRequest) returns (UpdateMemberResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION};

    option (google.api.http) = {
      patch: "/api/v1/members:this"
      body: "member"
    };
  }

  rpc UpdateMember(UpdateMemberRequest) returns (UpdateMemberResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};

    option (google.api.http) = {
      patch: "/api/v1/members/{id}"
      body: "member"
    };
  }

  rpc GetCurrentMember(GetCurrentMemberRequest) returns (GetMemberResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION};

    option (google.api.http) = {get: "/api/v1/members:this"};
  }

  rpc GetMember(GetMemberRequest) returns (GetMemberResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};
    option (google.api.http) = {get: "/api/v1/members/{id}"};
  }

  rpc ListMembers(ListMemberRequest) returns (ListMemberResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};
    option (google.api.http) = {get: "/api/v1/members"};
  }

  rpc DeleteMember(DeleteMemberRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE};
    option (google.api.http) = {delete: "/api/v1/members/{id}"};
  }
}

enum MemberRole {
  MEMBER_ROLE_UNSPECIFIED = 0;
  ADMIN = 1;
  USER = 2;
}

message Member {
  string id = 1;
  google.protobuf.Timestamp create_time = 2;
  google.protobuf.Timestamp update_time = 3;
  string workspace_id = 4;
  MemberRole role = 5;
  optional string first_name = 6 [(buf.validate.field).string = {max_len: 200}];
  optional string last_name = 7 [(buf.validate.field).string = {max_len: 200}];
  string email = 8 [(buf.validate.field).string.email = true];
  map<string, string> metadata = 9 [(buf.validate.field).map = {
    max_pairs: 10
    keys: {
      string: {
        min_len: 3
        max_len: 25
      }
    }
    values: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
  repeated scalekit.v1.commons.OrganizationMembership organizations = 10 [(google.api.field_behavior) = OUTPUT_ONLY];
  scalekit.v1.commons.UserProfile user_profile = 11;
}

message CreateMemberRequest {
  Member member = 1 [(buf.validate.field).required = true];
}

message CreateMemberResponse {
  Member member = 1;
}

message UpdateMember {
  reserved 4;
  optional MemberRole role = 5;
  optional string first_name = 6 [(buf.validate.field).string = {
    min_len: 1
    max_len: 200
  }];
  optional string last_name = 7 [(buf.validate.field).string = {
    min_len: 1
    max_len: 200
  }];
  reserved 8; // email can't be updated
  map<string, string> metadata = 9 [(buf.validate.field).map = {
    max_pairs: 10
    keys: {
      string: {
        min_len: 3
        max_len: 25
      }
    }
    values: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
  scalekit.v1.commons.UserProfile user_profile = 10;
}

message UpdateCurrentMemberRequest {
  UpdateMember member = 1;
}
message UpdateMemberRequest {
  string id = 1 [(buf.validate.field).string = {
    min_len: 19
    max_len: 25
  }];
  UpdateMember member = 2;
}

message UpdateMemberResponse {
  Member member = 1;
}

message GetCurrentMemberRequest {}

message GetMemberRequest {
  string id = 1 [(buf.validate.field).string = {
    min_len: 19
    max_len: 25
  }];
}

message GetMemberResponse {
  Member member = 1;
}

message ListMemberRequest {
  uint32 page_size = 1;
  string page_token = 2;
}

message ListMemberResponse {
  string next_page_token = 1;
  uint32 total_size = 2;
  repeated Member members = 3;
}

message DeleteMemberRequest {
  string id = 1 [(buf.validate.field).string = {
    min_len: 19
    max_len: 25
  }];
}
