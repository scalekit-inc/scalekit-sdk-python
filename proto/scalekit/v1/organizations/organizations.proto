syntax = "proto3";

package scalekit.v1.organizations;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/visibility.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/organizations";
// {{import \"proto/scalekit/v1/getting_started.md\"}}
option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
  info: {
    title: "Scalekit APIs"
    version: "1.0"
    // {{import \"proto/scalekit/v1/getting_started.md\"}}
    // This is copy of the content from proto/scalekit/v1/getting_started.md .
    // The go MD comments processor does not work with just this description field..
    // It can be used else where. So putting in raw content in a single line text i
    // The following content is the output of command  `cat proto/scalekit/v1/getting_started.md | sed -e 's/\\/\\\\/g' | sed -e 's/"/\\"/g' | awk 1 ORS='\\n'`
    description: "# Introduction\nScalekit API is modeled around the [REST](https://en.wikipedia.org/wiki/REST) architecture style. That means, our API has predictable resource-oriented URLs, accepts form-encoded request bodies and produces JSON formatted responses, uses standard HTTP verbs and error codes.\n\n## Getting Started\nIf you are just getting started, you can also refer to our [Quick Start Guide](/single-sign-on/quickstart-sso).\n\nApart from REST APIs, we have published SDKs in some of the popular languages as shown below. You can use these SDKs and integrate with Scalekit much faster.\n\n- [NodeJS](https://github.com/scalekit-inc/scalekit-sdk-node)\n- [Go Lang](https://github.com/scalekit-inc/scalekit-sdk-go)\n\nSome additional instructions around using our APIs\n\n- API Endpoint Host must use the `Environment URL` of the environment you are targeting.\n- API requests without appropriate authentication headers will fail with 401 status code.\n\nRead below to understand more about how to authenticate the API calls and how to handle errors appropriately.\n\n\n# API Authentication\nScalekit API uses [OAuth2 Client Credentials](https://www.oauth.com/oauth2-servers/access-tokens/client-credentials) based authentication. You can view and manage the necessary information from your `API Config` section in the Scalekit Dashboard.\n\nYou will need the following information to authenticate with Scalekit APIs\n- Client ID\n- Client Secret\n- Environment URL\n\nYou can obtain a secure token by making `POST` call to the `https://{ENV_URL}/oauth/token` endpoint and sending client_id and client_secret as part of the request body.\n\n```shell\n$ curl https://{ENV_URL}/oauth/token \\\n  -X POST \\\n  -H 'Content-Type: application/x-www-form-urlencoded' \\\n  -d 'client_id={client_id}' \\\n  -d 'client_secret={client_secret}' \\\n  -d 'grant_type=client_credentials'\\\n```\n\nUpon successful processing, you will receive the access token as part of the JSON response as shown in example below:\n```json\n{\n  \"access_token\": \"DCRD10-e7c5c8139165228a82e442445fe01c16\",\n  \"token_type\": \"bearer\",\n  \"expires_in\": 1799\n}\n```\nThe `access_token` is the OAuth access token you need to use for all subsequent API calls to Scalekit.\n\nTo make a request to one of our APIs, you need to include the access token in the Authorization header of the request as Bearer 'access_token' like the following example shows:\n```shell\n$ curl --request GET \"https://{ENV_URL}/api/v1/organizations\" \\\n-H \"Content-Type: application/json\" \\\n-H \"Authorization: Bearer {access_token}\"\n```\n\nPlease make sure that you keep your Client Secrets safely. Do not share your client secret in publicly accessible areas such as GitHub, client-side code, etc. Refer to [this guide](/security/client-secrets) to understand some of the best practices around keeping client secrets secure.\n\nOur SDKs will automatically handle the API authentication and error handling to make the job of using our APIs much easier for you.\n\n# Error Handling\nAs mentioned earlier, Scalekit APIs return appropriate HTTP Status Codes along with the detailed error messages in case of invalid usage of APIs.\n\nIn general:\n- `200 or 201`: API request is successful\n- `400`: The request was unacceptable, often due to missing a required parameter.\n- `401`: Invalid Authentication Headers found in the request.\n- `404`: Resource not found\n- `429`: Too many requests hit the API too quickly. Retry the request after a cool-off period.\n- `500 or 501 or 504`: Something went wrong at our end. However rare they are, we automatically log these requests for proactive support and fixing the underlying issue.\n\nAlong with HTTP Status Codes, we also respond with detailed error messages. An example error message for a 401 error is shown below.\n\n```json\n{\n    \"code\": 16,\n    \"message\": \"Token empty\",\n    \"details\":\n    [\n        {\n            \"@type\": \"type.googleapis.com/scalekit.v1.errdetails.ErrorInfo\",\n            \"error_code\": \"UNAUTHENTICATED\"\n        }\n    ]\n}\n```\n\nWe strongly recommend you to handle errors gracefully while writing code using our SDKs.\n"
    contact: {
      name: "Scalekit"
      url: "https://scalekit.com"
      email: "support@scalekit.com"
    }
    license: {
      name: "Apache 2.0"
      url: "http://www.apache.org/licenses/LICENSE-2.0"
    }
  }

  host: "$ENV_URL"

  schemes: HTTPS

  consumes: "application/json"
  produces: "application/json"

  external_docs: {
    description: "Scalekit Developer Documentation"
    url: "https://docs.scalekit.com/"
  }

  security_definitions: {
    security: {
      key: "OAuth2"
      value: {
        type: TYPE_OAUTH2
        flow: FLOW_APPLICATION
        token_url: "https://$ENV_URL/oauth/token"
      }
    }
  }
  security: {
    security_requirement: {key: "OAuth2"}
  }

  tags: [
    /* The following does not work for Scalar .. But works fine with Redocly */ /* { name: "Scalekit API", description: "{{import \"proto/scalekit/v1/getting_started.md\"}}", },*/ {name: "Single Sign-On"},
    {name: "Organization"},
    {name: "Admin Portal"}]
};

service OrganizationService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {
    name: "Organization"
    // Imported description from a markdown file can be added here in service or as a Tag description in the above section
    description: "{{import \"proto/scalekit/v1/organizations/organization_details.md\"}}"
  };

  // Create Organization
  rpc CreateOrganization(CreateOrganizationRequest) returns (CreateOrganizationResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};

    option (google.api.http) = {
      post: "/api/v1/organizations"
      body: "organization"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "Create a New Organization"
      description: "Create a new organization to represent a tenant within your application"

      responses: {
        key: "201"
        value: {
          description: "Organization created successfully"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.CreateOrganizationResponse"}
          }
        }
      }
    };
  }

  rpc UpdateOrganization(UpdateOrganizationRequest) returns (UpdateOrganizationResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};

    option (google.api.http) = {
      patch: "/api/v1/organizations/{id}"
      body: "organization"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "Update Organization Information"
      description: "Update the details of an existing organization using its unique identifier"
      responses: {
        key: "200"
        value: {
          description: "Organization updated successfully"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.UpdateOrganizationResponse"}
          }
        }
      }
    };
  }

  rpc GetOrganization(GetOrganizationRequest) returns (GetOrganizationResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations/{id}"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "Retrieve Organization Information"
      description: "Fetch detailed information about a specific organization using its unique identifier."

      responses: {
        key: "200"
        value: {
          description: "Successfully retrieved organization details"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.GetOrganizationResponse"}
          }
        }
      }
    };
  }

  rpc ListOrganization(ListOrganizationsRequest) returns (ListOrganizationsResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "List All Organizations"
      description: "Retrieve a paginated list of all organizations within the environment. Use the page_token from the response to access subsequent pages of results"
      responses: {
        key: "200"
        value: {
          description: "Successfully retrieved the list of organizations"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.ListOrganizationsResponse"}
          }
        }
      }
    };
  }

  rpc SearchOrganization(SearchOrganizationsRequest) returns (SearchOrganizationsResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations:search"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "Search Organizations"
      description: "List all Organizations in the Environment with given query. The query can be any one of name, organizationID or externalID, if more than one organization matches the query string multiple results are returned. The response contains page_token that can be used to access the next page of results."
      responses: {
        key: "200"
        value: {
          description: "Success"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.SearchOrganizationsResponse"}
          }
        }
      }
    };
  }

  //Delete an Organization
  rpc DeleteOrganization(DeleteOrganizationRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {delete: "/api/v1/organizations/{id}"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "Delete an Organization"
      description: "Remove an existing organization from the environment using its unique identifier"

      responses: {
        key: "200"
        value: {description: "Deleted Successfully"}
      }
    };
  }

  //Generate Portal Link for Org
  rpc GeneratePortalLink(GeneratePortalLinkRequest) returns (GeneratePortalLinkResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.http) = {put: "/api/v1/organizations/{id}/portal_links"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Admin Portal"
      summary: "Generate Portal link"
      description: "Generates an Admin Portal link. The Admin Portal will be used by IT Admins to create and manage the SSO connection in their organization. The link generated via API will be valid for 1 week"
      responses: {
        key: "200"
        value: {
          description: "Admin Portal link created successfully"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.GeneratePortalLinkResponse"}
          }
        }
      }
    };
  }

  rpc DeletePortalLink(DeletePortalLinkRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION};
    option (google.api.http) = {delete: "/api/v1/organizations/{id}/portal_links"};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Admin Portal"
      summary: "Delete Portal Link"
      description: "Revokes and deletes an Admin portal link."
      responses: {
        key: "200"
        value: {description: "Portal link deleted successfully"}
      }
    };
  }

  rpc DeletePortalLinkByID(DeletePortalLinkByIdRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {delete: "/api/v1/organizations/{id}/portal_links/{link_id}"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Admin Portal"
      summary: "Delete Admin Portal link"
      description: "Revokes and deletes an Admin portal link."
      responses: {
        key: "200"
        value: {description: "Success"}
      }
    };
  }

  rpc GetPortalLinks(GetPortalLinkRequest) returns (GetPortalLinksResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {get: "/api/v1/organizations/{id}/portal_links"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Admin Portal"
      summary: "Get Portal link"
      description: "Returns the Admin portal link if it exists. Use Generate Portal link to create and fetch a link"
      responses: {
        key: "200"
        value: {
          description: "Success"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.GetPortalLinksResponse"}
          }
        }
      }
    };
  }

  rpc UpdateOrganizationSettings(UpdateOrganizationSettingsRequest) returns (GetOrganizationResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: SESSION_CLIENT};
    option (google.api.http) = {
      patch: "/api/v1/organizations/{id}/settings"
      body: "settings"
    };

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Organization"
      summary: "Update Organization Settings"
      description: "Update the settings of the Organization. The settings include the SSO settings, Directory sync settings etc."
      responses: {
        key: "200"
        value: {
          description: "Updated Successfully"
          schema: {
            json_schema: {ref: ".scalekit.v1.organizations.GetOrganizationResponse"}
          }
        }
      }
    };
  }
}

message CreateOrganizationRequest {
  // Organization details
  CreateOrganization organization = 1 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Organization details"}
  ];
}

message CreateOrganizationResponse {
  Organization organization = 1;
}

message CreateOrganization {
  // Name of the org to be used in display
  string display_name = 4 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 200
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Display Name of the Organization"
      example: "\"Acme Corp\""
    }
  ];
  // Optional regioncode
  scalekit.v1.commons.RegionCode region_code = 5 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Region code (currently only supports \"US\")"
      example: "\"US\""
    },
    (google.api.field_visibility).restriction = "PREVIEW"
  ];
  // External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
  optional string external_id = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Unique identifier that links an Organization Object to your app's tenant, stored as an External ID"
    example: "\"my_unique_id\""
  }];
  // Key value pairs extension attributes.
  map<string, string> metadata = 7 [(buf.validate.field).map = {
    max_pairs: 10
    keys: {
      string: {
        min_len: 3
        max_len: 25
      }
    }
    values: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
}

message Organization {
  // Id
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Organization ID"
    example: "\"org_2123312131125533\""
  }];
  // Created Time
  google.protobuf.Timestamp create_time = 2 [
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "\"2024-01-05T14:48:00.000Z\""
      description: "Created Time"
    },
    (google.api.field_behavior) = REQUIRED
  ];
  // Updated time
  google.protobuf.Timestamp update_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: ""
    description: "Updated Time"
  }];
  // Name of the org to be used in display
  string display_name = 4 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 200
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Display Name of the Organization"
      example: "\"Acme Corp\""
    }
  ];
  // Optional regioncode
  scalekit.v1.commons.RegionCode region_code = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Region code . Only US is supported "
    example: "\"US\""
  }];
  // External Id is useful to store a unique identifier for a given Org that. The unique Identifier can be the id of your tenant / org in your SaaSApp
  optional string external_id = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Unique identifier that links an Organization Object to your app's tenant, stored as an External ID"
    example: "\"my_unique_id\""
  }];
  // Key value pairs extension attributes.
  map<string, string> metadata = 7 [(buf.validate.field).map = {
    max_pairs: 10
    keys: {
      string: {
        min_len: 3
        max_len: 25
      }
    }
    values: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
  // Organization Settings
  OrganizationSettings settings = 8;
}

message UpdateOrganizationRequest {
  oneof identities {
    string id = 1 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 32
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Unique identifier of the organization to be updated"
        example: "\"org_121312434123312\""
      }
    ];
    string external_id = 2 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 32
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "External ID of the organization to be updated"
        example: "\"tenant_123123123123123\""
        field_configuration: {path_param_name: "org.external_id"}
      }
    ];
  }
  UpdateOrganization organization = 3 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Organization Parameters to be updated"}
  ];
  google.protobuf.FieldMask update_mask = 99;
}

// For update messages ensure the indexes are same as the base model itself.
message UpdateOrganization {
  optional string display_name = 4 [(buf.validate.field).string = {
    min_len: 1
    max_len: 200
  }];
  reserved 5; //region is not updatable here.
  optional string external_id = 6;
  map<string, string> metadata = 7 [(buf.validate.field).map = {
    max_pairs: 10
    keys: {
      string: {
        min_len: 3
        max_len: 25
      }
    }
    values: {
      string: {
        min_len: 1
        max_len: 256
      }
    }
  }];
}

message UpdateOrganizationResponse {
  Organization organization = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Updated organization details"}];
}

message GetOrganizationRequest {
  oneof identities {
    string id = 1 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 32
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Unique identifier to an Organization"
        example: "\"org_121312434123312\""
      }
    ];
    string external_id = 2 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 32
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Unique identifier that links an Organization Object to your app's tenant, stored as an External ID"
        example: "\"tenant_123123123123123\""
        field_configuration: {path_param_name: "org.external_id"}
      }
    ];
  }
}

message GetOrganizationResponse {
  Organization organization = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Organization details"}];
}

message ListOrganizationsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "List Organizations"
      description: "Retrieve a paginated list of all organizations within the environment. Use the page_token from the response to access subsequent pages of results"
      required: ["page_size"]
    }
    example: "{\"page_size\" : 30 , \"page_token\" : \"ZASSADASASA\" }"
  };
  uint32 page_size = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "30"
    description: "Number of results to be returned. Max supported page_size is 30"
  }];
  string page_token = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "30"
    description: "Token to access the next page of results"
  }];
}

message ListOrganizationsResponse {
  string next_page_token = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "30"
    description: "Token to access the next page of results"
  }];
  uint32 total_size = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "30"
    description: "Total number of results"
  }];
  repeated Organization organizations = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "List of organization objects"}];
  string prev_page_token = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    example: "30"
    description: "Token to access the previous page of results"
  }];
}

message SearchOrganizationsRequest {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_schema) = {
    json_schema: {
      title: "Search Organizations"
      description: "Search Organizations in your Environment with the given string"
    }
    example: "query=acme&page_size=30&page_token=1"
  };

  string query = 1 [
    (buf.validate.field).string = {
      min_len: 3
      max_len: 100
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "acme"
      description: "query to search for. The search is case insensitive. minimum length should be 3"
    }
  ];

  uint32 page_size = 2 [
    (buf.validate.field).uint32 = {lte: 30},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      example: "30"
      description: "Number of results to be returned. Max supported page_size is 30"
    }
  ];
  string page_token = 3;
}

message SearchOrganizationsResponse {
  string next_page_token = 1;
  uint32 total_size = 2;
  repeated Organization organizations = 3;
  string prev_page_token = 4;
}

message DeleteOrganizationRequest {
  oneof identities {
    string id = 1 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 32
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "Unique identifier of the organization to delete"
        example: "\"org_121312434123312\""
      }
    ];
    string external_id = 2 [
      (buf.validate.field).string = {
        min_len: 1
        max_len: 32
      },
      (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
        description: "External ID of the organization to delete"
        example: "\"tenant_123123123123123\""
        field_configuration: {path_param_name: "org.external_id"}
      }
    ];
  }
}

message GeneratePortalLinkRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Organization ID"
      example: "\"org_1231234233424344\""
    }
  ];
  optional bool sso = 2;
  optional bool directory_sync = 3;
}

message GetPortalLinkRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Organization ID"
      example: "\"org_1231234233424344\""
    }
  ];
}

message DeletePortalLinkRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Organization ID"
      example: "\"org_1231234233424344\""
    }
  ];
}

message DeletePortalLinkByIdRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Organization ID"
      example: "\"org_1231234233424344\""
    }
  ];

  string link_id = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "lnk_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Link ID"
      example: "\"lnk_1231234233424344\""
    }
  ];
}

message Link {
  string id = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Unique Identifier for the link"
    example: "\"lnk_123123123123123\""
  }];
  string location = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Location of the link. This is the URL that can be used to access the Admin portal. The link is valid for 1 week."
    example: "\"https://scalekit.com/portal/lnk_123123123123123\""
  }];
  google.protobuf.Timestamp expire_time = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Expiry time of the link. The link is valid for 1 week."
    example: "\"2024-02-06T14:48:00.000Z\""
  }];
}

message GeneratePortalLinkResponse {
  Link link = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Admin Portal Link"}];
}

message GetPortalLinksResponse {
  repeated Link links = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Admin Portal Links"}];
}

message UpdateOrganizationSettingsRequest {
  string id = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the organization to update settings"
      example: "\"org_1231234233424344\""
    }
  ];

  OrganizationSettings settings = 2 [(buf.validate.field).required = true];
}

message OrganizationSettings {
  repeated OrganizationSettingsFeature features = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Organization settings features such as SSO and SCIM Provisioning"}];
}

message OrganizationSettingsFeature {
  string name = 1;
  bool enabled = 2;
}
