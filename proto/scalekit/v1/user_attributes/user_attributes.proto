syntax = "proto3";

package scalekit.v1.user_attributes;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/any.proto";
import "google/protobuf/duration.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/user_attributes";

service UserAttributeService {
  rpc CreateSsoUserAttribute(CreateUserAttributeRequest) returns (CreateUserAttributeResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {
      post: "/api/v1/sso-user-attributes"
      body: "user_attribute"
      additional_bindings: [
        {
          post: "/api/v1/user-profile-attributes"
          body: "user_attribute"
        }
      ]
    };
  }

  rpc ListSsoUserAttributes(google.protobuf.Empty) returns (ListUserAttributesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {
      get: "/api/v1/sso-user-attributes"
      additional_bindings: [
        {get: "/api/v1/user-profile-attributes"}]
    };
  }

  rpc UpdateSsoUserAttribute(UpdateUserAttributeRequest) returns (UpdateUserAttributeResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {
      patch: "/api/v1/sso-user-attributes/{key}"
      body: "user_attribute"
      additional_bindings: [
        {
          patch: "/api/v1/user-profile-attributes/{key}"
          body: "user_attribute"
        }
      ]
    };
  }

  rpc DeleteSsoUserAttribute(DeleteUserAttributeRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {
      delete: "/api/v1/sso-user-attributes/{key}"
      additional_bindings: [
        {delete: "/api/v1/user-profile-attributes/{key}"}]
    };
  }

  rpc CreateDirectoryUserAttribute(CreateUserAttributeRequest) returns (CreateUserAttributeResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {
      post: "/api/v1/directory-user-attributes"
      body: "user_attribute"
    };
  }

  rpc ListDirectoryUserAttributes(google.protobuf.Empty) returns (ListUserAttributesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/directory-user-attributes"};
  }

  rpc UpdateDirectoryUserAttribute(UpdateUserAttributeRequest) returns (UpdateUserAttributeResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {
      patch: "/api/v1/directory-user-attributes/{key}"
      body: "user_attribute"
    };
  }

  rpc DeleteDirectoryUserAttribute(DeleteUserAttributeRequest) returns (google.protobuf.Empty) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {delete: "/api/v1/directory-user-attributes/{key}"};
  }
}

message UserAttribute {
  string key = 1 [
    (buf.validate.field).string = {
      min_len: 3
      max_len: 25
    },
    (buf.validate.field).string.pattern = "^[a-zA-Z-_]+$"
  ];
  bool enabled = 2;
  bool required = 3;
  string label = 4 [(buf.validate.field).string = {
    min_len: 3
    max_len: 250
  }];
  UserAttributeDatatype datatype = 5 [(buf.validate.field).enum = {
    not_in: [0]
  }];
  UserAttributeCategory category = 6 [(google.api.field_behavior) = OUTPUT_ONLY];
  oneof additional_info {
    SSOUserAdditionInfo sso_addition_info = 7;
    DirectoryUserAdditionalInfo directory_user_additional_info = 8;
  }
}

message SSOUserAdditionInfo {
  string default_saml_mapping = 1 [
    (buf.validate.field).string = {
      min_len: 0
      max_len: 25
    },
    (buf.validate.field).string.pattern = "^[a-zA-Z-_]+|$"
  ];
  string default_oidc_mapping = 2 [
    (buf.validate.field).string = {
      min_len: 0
      max_len: 25
    },
    (buf.validate.field).string.pattern = "^[a-zA-Z-_]+|$"
  ];
}

message DirectoryUserAdditionalInfo {}

enum UserAttributeDatatype {
  UNSPECIFIED_DATATYPE = 0;
  STRING = 1;
  NUMBER = 2;
  BOOL = 3;
  ARRAY = 4;
  OBJECT = 5;
}

enum UserAttributeCategory {
  UNSPECIFIED_CATEGORY = 0;
  STANDARD = 1;
  CUSTOM = 2;
}

message CreateUserAttributeRequest {
  UserAttribute user_attribute = 1 [(buf.validate.field).required = true];
}

message CreateUserAttributeResponse {
  UserAttribute user_attribute = 1;
}

message ListUserAttributesResponse {
  repeated UserAttribute user_attributes = 1;
}

message UpdateUserAttributeRequest {
  string key = 1 [(buf.validate.field).string = {
    min_len: 3
    max_len: 250
  }];
  UserAttribute user_attribute = 2 [(buf.validate.field).required = true];
}

message UpdateUserAttributeResponse {
  UserAttribute user_attribute = 1;
}

message DeleteUserAttributeRequest {
  string key = 1 [(buf.validate.field).string = {
    min_len: 3
    max_len: 250
  }];
}
