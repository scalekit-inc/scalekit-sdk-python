syntax = "proto3";

package scalekit.v1.directories;

import "buf/validate/validate.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/visibility.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/struct.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/wrappers.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "scalekit/v1/commons/commons.proto";
import "scalekit/v1/options/options.proto";

option go_package = "github.com/scalekit-inc/scalekit/pkg/grpc/directories";

service DirectoryService {
  option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_tag) = {name: "Directory"};

  rpc CreateDirectory(CreateDirectoryRequest) returns (CreateDirectoryResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {
      post: "/api/v1/organizations/{organization_id}/directories"
      body: "directory"
    };
  }

  rpc UpdateDirectory(UpdateDirectoryRequest) returns (UpdateDirectoryResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {
      patch: "/api/v1/organizations/{organization_id}/directories/{id}"
      body: "directory"
    };
  }

  rpc AssignRoles(AssignRolesRequest) returns (AssignRolesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {
      put: "/api/v1/organizations/{organization_id}/directories/{id}/groups/-/roles:assign"
      body: "role_assignments"
    };
  }

  rpc UpdateAttributes(UpdateAttributesRequest) returns (UpdateAttributesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {
      put: "/api/v1/organizations/{organization_id}/directories/{id}/attributes"
      body: "attribute_mapping"
    };
  }

  rpc GetDirectory(GetDirectoryRequest) returns (GetDirectoryResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations/{organization_id}/directories/{id}"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "Get Directory"
      description: "Retrieves detailed information about a specific directory within an organization. This endpoint allows you to view the properties and configuration of a connected Directory Provider"
      responses: {
        key: "200"
        value: {
          description: "Successfully retrieved the directory details"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.GetDirectoryResponse"}
          }
        }
      }
    };
  }

  rpc ListDirectories(ListDirectoriesRequest) returns (ListDirectoriesResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations/{organization_id}/directories"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "List Directories for an Organization"
      responses: {
        key: "200"
        value: {
          description: "Successfully retrieved the list of directories"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.ListDirectoriesResponse"}
          }
        }
      }
    };
  }

  rpc EnableDirectory(ToggleDirectoryRequest) returns (ToggleDirectoryResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {patch: "/api/v1/organizations/{organization_id}/directories/{id}:enable"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "Enable a Directory"
      description: "Enables a directory, allowing it to be used for user management and authentication"
      responses: {
        key: "200"
        value: {
          description: "Success"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.ToggleDirectoryResponse"}
          }
        }
      }
    };
  }

  rpc DisableDirectory(ToggleDirectoryRequest) returns (ToggleDirectoryResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: CUSTOMER_PORTAL_SESSION_CLIENT};
    option (google.api.http) = {patch: "/api/v1/organizations/{organization_id}/directories/{id}:disable"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "Disable a Directory"
      description: "Disables a directory, preventing it from being used for user management and authentication"
      responses: {
        key: "200"
        value: {
          description: "Successfully disabled the directory"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.ToggleDirectoryResponse"}
          }
        }
      }
    };
  }

  rpc ListDirectoryUsers(ListDirectoryUsersRequest) returns (ListDirectoryUsersResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations/{organization_id}/directories/{directory_id}/users"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "List Users in Directory"
      description: "Retrieves a list of all users within a specified directory for an organization. This endpoint allows you to view user accounts associated with your connected Directory Providers."
      responses: {
        key: "200"
        value: {
          description: "Successfully retrieved the list of users from the specified directory"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.ListDirectoryUsersResponse"}
          }
        }
      }
    };
  }

  rpc ListDirectoryGroups(ListDirectoryGroupsRequest) returns (ListDirectoryGroupsResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.http) = {get: "/api/v1/organizations/{organization_id}/directories/{directory_id}/groups"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "List Groups in Directory"
      description: "Retrieves a list of all groups within a specified directory for an organization. This endpoint allows you to view the group structures within your connected Directory Providers."
      responses: {
        key: "200"
        value: {
          description: "Successfully retrieved the list of groups from the specified directory"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.ListDirectoryGroupsResponse"}
          }
        }
      }
    };
  }

  rpc CreateDirectorySecret(CreateDirectorySecretRequest) returns (CreateDirectorySecretResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {post: "/api/v1/organizations/{organization_id}/directories/{directory_id}/secrets"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "Create Secret for a Directory"
      responses: {
        key: "200"
        value: {
          description: "Success"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.CreateDirectorySecretResponse"}
          }
        }
      }
    };
  }

  rpc RegenerateDirectorySecret(RegenerateDirectorySecretRequest) returns (RegenerateDirectorySecretResponse) {
    option (scalekit.v1.options.auth_option) = {authentication_type: WORKSPACE_SESSION_CLIENT};
    option (google.api.method_visibility).restriction = "PREVIEW";
    option (google.api.http) = {post: "/api/v1/organizations/{organization_id}/directories/{directory_id}/secrets:regenerate"};

    option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
      tags: "Directory"
      summary: "Regenerate Secret for a Directory"
      responses: {
        key: "200"
        value: {
          description: "Success"
          schema: {
            json_schema: {ref: ".scalekit.v1.directories.RegenerateDirectorySecretResponse"}
          }
        }
      }
    };
  }
}

message GetDirectoryRequest {
  string id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of a Directory"
      example: "\"dir_121312434123312\""
    }
  ];
  string organization_id = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier to an Organization"
      example: "\"org_121312434123312\""
    }
  ];
}

message GetDirectoryResponse {
  Directory directory = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Retrieves detailed information about a specific directory within an organization. This endpoint allows you to view the properties and configuration of a connected Directory Provider"}];
}

message CreateDirectoryRequest {
  string organization_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    },
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier to an Organization"
      example: "\"org_12362474900684814\""
    }
  ];
  CreateDirectory directory = 2 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Directory Details"}
  ];
}

message CreateDirectory {
  DirectoryType directory_type = 1 [
    (buf.validate.field).enum.defined_only = true,
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Type"
      example: "\"SCIM\""
    }
  ];
  DirectoryProvider directory_provider = 2 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Provide"
      example: "\"OKTA\""
    }
  ];
}

message CreateDirectoryResponse {
  Directory directory = 1 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Directory Details"}
  ];
}

message UpdateDirectoryRequest {
  string id = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "dir_"
  }];
  string organization_id = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "org_"
  }];
  UpdateDirectory directory = 3 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Directory Details"}
  ];
}

message UpdateDirectory {
  reserved 1;
  string name = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Name"
      example: "\"Azure AD\""
    }
  ];
  DirectoryType directory_type = 3 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Type"
      example: "\"SCIM\""
    }
  ];
  reserved 4;
  reserved 6;
  bool enabled = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Status"
    example: "true"
  }];
  DirectoryProvider directory_provider = 8 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Provider"
      example: "\"OKTA\""
    }
  ];
  DirectoryStatus status = 9 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Setup Status"
      example: "\"COMPLETED\""
    }
  ];
  repeated DirectoryMapping mappings = 10;
  reserved 11;
  reserved 12;
  reserved 13;
  reserved 14;
}

message UpdateDirectoryResponse {
  Directory directory = 1 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Directory Details"}
  ];
}

message ListDirectoriesRequest {
  string organization_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier for the organization. This ID is used to retrieve directories associated with the specified organization."
      example: "\"org_12362474900684814\""
    }
  ];
}

message ListDirectoriesResponse {
  repeated Directory directories = 1 [
    (buf.validate.field).required = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "A collection of directory objects associated with the organization."}
  ];
}

message ListDirectoryUsersRequest {
  string organization_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the organization"
      example: "\"org_121312434123312\""
    }
  ];
  string directory_id = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "dir_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the directory within the organization"
      example: "\"dir_121312434123312\""
    }
  ];
  uint32 page_size = 3 [
    (buf.validate.field).uint32 = {lte: 30},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Number of users to return per page. Maximum value is 30. If not specified, defaults to 10"
      example: "10"
    }
  ];
  string page_token = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Token for pagination. Use the value returned in the 'next_page_token' field of the previous response to retrieve the next page of results"}];

  optional bool include_detail = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "If set to true, the response will include the full user payload with all available details. If false or not specified, only essential user information will be returned"
    example: "true"
  }];
  optional string directory_group_id = 6 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 37
      prefix: "dirgroup_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Filter users by their membership in a specific directory group"
      example: "\"dirgroup_121312434123\""
    }
  ];
  optional google.protobuf.Timestamp updated_after = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter users that were updated after the specified timestamp. Use ISO 8601 format"
    example: "\"2021-01-01T00:00:00Z\""
  }];
}

message ListDirectoryUsersResponse {
  repeated DirectoryUser users = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "List of directory users retrieved from the specified directory."}];

  uint32 total_size = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Total number of users available in the directory that match the request criteria. This value represents the overall count of users, regardless of pagination."}];

  string next_page_token = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Token to retrieve the next page of results. Use this token in the 'page_token' field of the next request to fetch the subsequent page of users."}];

  string prev_page_token = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Token to retrieve the previous page of results. Use this token in the 'page_token' field of the next request to fetch the prior page of users."}];
}

message ListDirectoryGroupsRequest {
  string organization_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the organization"
      example: "\"org_121312434123312\""
    }
  ];
  string directory_id = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "dir_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the directory within the organization"
      example: "\"dir_121312434123312\""
    }
  ];
  uint32 page_size = 3 [
    (buf.validate.field).uint32 = {lte: 30},
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Number of groups to return per page (default: 10, max: 30)"
      example: "10"
    }
  ];
  string page_token = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Token for pagination. Use the value returned in the previous response to fetch the next page of results"}];
  optional google.protobuf.Timestamp updated_after = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Filter groups updated after the specified timestamp (RFC 3339 format)"
    example: "\"2021-01-01T00:00:00Z\""
  }];
  optional bool include_detail = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "If true, include the full group payload in the response; otherwise, only basic information is returned (default: false)"
    example: "true"
  }];
}

message ListDirectoryGroupsResponse {
  repeated DirectoryGroup groups = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "List of directory groups retrieved from the specified directory. Each group contains information about its members"}];
  uint32 total_size = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Total number of groups available in the directory. This value represents the overall count of groups, regardless of pagination"}];
  string next_page_token = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Token to retrieve the next page of results. This field is populated when there are more groups available than can be returned in the current response. Use this token in the next request to fetch the subsequent page of groups"}];
  string prev_page_token = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Token to retrieve the previous page of results. This field is populated when there are preceding pages of groups available. Use this token in the next request to fetch the prior page of groups, enabling backward navigation through the paginated results"}];
}

message Directory {
  string id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "dir_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the directory"
      example: "\"dir_121312434123312\""
    }
  ];
  string name = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Name of the directory, typically representing the connected Directory Provider"
      example: "\"Azure AD\""
    }
  ];
  DirectoryType directory_type = 3 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Type of the directory, indicating the protocol or standard used for synchronization"
      example: "\"SCIM\""
    }
  ];
  string organization_id = 4 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the organization to which the directory belongs"
      example: "\"org_121312434123312\""
    }
  ];
  bool enabled = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Indicates whether the directory is currently enabled and actively synchronizing users and groups"
    example: "true"
  }];
  DirectoryProvider directory_provider = 6 [
    (buf.validate.field).enum.defined_only = true,
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The Directory Provider connected to this directory, such as Okta, OneLogin or Microsoft Entra ID"
      example: "\"OKTA\""
    }
  ];
  google.protobuf.Timestamp last_synced_at = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Timestamp of the last successful synchronization of users and groups from the Directory Provider"
    example: "\"2024-10-01T00:00:00Z\""
  }];
  string directory_endpoint = 8 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 2000
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "The endpoint URL generated by Scalekit for synchronizing users and groups from the Directory Provider"
      example: "\"https://yourapp.scalekit.com/api/v1/directoies/dir_123212312/scim/v2\""
    }
  ];
  int32 total_users = 9 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Total number of users in the directory"
    example: "10"
  }];
  int32 total_groups = 10 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Total number of groups in the directory"
    example: "10"
  }];
  repeated Secret secrets = 11 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "List of secrets used for authenticating and synchronizing with the Directory Provider"}];
  Stats stats = 12 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Statistics and metrics related to the directory, such as synchronization status and error counts"}];
  RoleAssignments role_assignments = 13 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Role assignments associated with the directory, defining group based role assignments"}];
  AttributeMappings attribute_mappings = 14 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Mappings between directory attributes and Scalekit user and group attributes"}];
}

message ToggleDirectoryRequest {
  string organization_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the organization"
      example: "\"org_121312434123312\""
    }
  ];
  reserved 2;
  string id = 3 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "dir_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Unique identifier of the directory within the organization"
      example: "\"dir_121312434123312\""
    }
  ];
}

message ToggleDirectoryResponse {
  bool enabled = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Indicates whether the directory is currently enabled or disabled after the toggle operation. If true, the directory is enabled and actively synchronizing users and groups. If false, the directory is disabled and not synchronizing"
    example: "true"
  }];
  optional string error_message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "If the toggle operation encountered an error, this field will contain a human-readable error message providing more details about the issue. If the operation was successful, this field will be empty"
    example: "\"Directory is already enabled\""
  }];
}

enum DirectoryType {
  DIRECTORY_TYPE_UNSPECIFIED = 0;
  SCIM = 1;
  LDAP = 2;
}

enum DirectoryProvider {
  DIRECTORY_PROVIDER_UNSPECIFIED = 0;
  OKTA = 1;
  GOOGLE = 2;
  MICROSOFT_AD = 3;
  AUTH0 = 4;
  ONELOGIN = 5;
  JUMPCLOUD = 6;
  PING_IDENTITY = 7;
}

enum DirectoryStatus {
  DIRECTORY_STATUS_UNSPECIFIED = 0;
  DRAFT = 1;
  IN_PROGRESS = 2;
  COMPLETED = 3;
}

message DirectoryMapping {
  string key = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    }
  ];
  string map_to = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    }
  ];
  string display_name = 3;
}

message DirectoryUser {
  string id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 36
      prefix: "diruser_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "User ID"
      example: "\"diruser_121312434123312\""
    }
  ];
  string email = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Email"
      example: "\"johndoe\""
    }
  ];
  string preferred_username = 3 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Preferred Username"
      example: "\"johndoe\""
    }
  ];
  string given_name = 4 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "First Name"
      example: "\"John\""
    }
  ];
  string family_name = 5 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Last Name"
      example: "\"Doe\""
    }
  ];
  google.protobuf.Timestamp updated_at = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Updated At"
    example: "\"2024-10-01T00:00:00Z\""
  }];
  reserved 7 to 15;
  repeated string emails = 16 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Emails"}];
  repeated DirectoryGroup groups = 17 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Groups"}];
  google.protobuf.Struct user_detail = 18 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Complete User Details Payload"}];
}

message DirectoryGroup {
  string id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 36
      prefix: "dirgroup_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Group ID"
      example: "\"dirgroup_121312434123312\""
    }
  ];
  string display_name = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 256
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Display Name"
      example: "\"Admins\""
    }
  ];
  int32 total_users = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Total Users in the Group"
    example: "10"
  }];
  google.protobuf.Timestamp updated_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Updated At"
    example: "\"2024-10-01T00:00:00Z\""
  }];
  google.protobuf.Struct group_detail = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Complete Group Details Payload"}];
}

message CreateDirectorySecretRequest {
  string organization_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "org_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Organization ID"
      example: "\"org_12362474900684814\""
    }
  ];
  string directory_id = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "dir_"
  }];
}

message CreateDirectorySecretResponse {
  string plain_secret = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Plain Secret. This is only returned in Plain Text as response to the Creation Request."
    example: "\"dXNlcm5hbWU6cGFzc3dvcmQ6c2VjcmV0a2V5MTIzNDU2Nzg5\""
  }];
  Secret secret = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Secret Details"}];
}

message RegenerateDirectorySecretRequest {
  string organization_id = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "org_"
  }];
  string directory_id = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "dir_"
  }];
}

message RegenerateDirectorySecretResponse {
  string plain_secret = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Plain Secret. This is only returned in Plain Text as response to the Creation Request."
    example: "\"dXNlcm5hbWU6cGFzc3dvcmQ6c2VjcmV0a2V5MTIzNDU2Nzg5\""
  }];
  Secret secret = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {description: "Secret Details"}];
}

message Secret {
  string id = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "sec_"
  }];
  google.protobuf.Timestamp create_time = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Creation Time"
    example: "\"2024-10-01T00:00:00Z\""
  }];
  string secret_suffix = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Secret Suffix"
    example: "\"Nzg5\""
  }];
  SecretStatus status = 5 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Secret Status"
    example: "\"ACTIVE\""
  }];
  google.protobuf.Timestamp expire_time = 6 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Expiry Time"
    example: "\"2025-10-01T00:00:00Z\""
  }];
  google.protobuf.Timestamp last_used_time = 7 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Last Used Time"
    example: "\"2024-10-01T00:00:00Z\""
  }];
  string directory_id = 9 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
      prefix: "dir_"
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "Directory ID"
      example: "\"dir_12362474900684814\""
    }
  ];
}

message Stats {
  int32 total_users = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Total Users in the Directory"
    example: "10"
  }];
  int32 total_groups = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Total Groups in the Directory"
    example: "10"
  }];
  google.protobuf.Timestamp group_updated_at = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Max time of Group Updated At for Directory"
    example: "\"2024-10-01T00:00:00Z\""
  }];
  google.protobuf.Timestamp user_updated_at = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
    description: "Max time of User Updated At for Directory"
    example: "\"2024-10-01T00:00:00Z\""
  }];
}

enum SecretStatus {
  ACTIVE = 0;
  INACTIVE = 1;
}

message AssignRolesRequest {
  string organization_id = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
  }];
  string id = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
  }];

  RoleAssignments role_assignments = 3;
}

message RoleAssignments {
  repeated RoleAssignment assignments = 1;
}

message AssignRolesResponse {
  RoleAssignments role_assignments = 1;
}

message RoleAssignment {
  string group_id = 1 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    },
    (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
      description: "group ID for the role mapping"
      example: "\"dirgroup_121312434123\""
    }
  ];
  string role_name = 2 [
    (buf.validate.field).string = {
      min_len: 1
      max_len: 100
      pattern: "^[a-zA-Z0-9_]{1,64}$"
    },
    (buf.validate.field).required = true
  ];
}

message UpdateAttributesRequest {
  string organization_id = 1 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "org_"
  }];
  string id = 2 [(buf.validate.field).string = {
    min_len: 1
    max_len: 32
    prefix: "dir_"
  }];
  AttributeMappings attribute_mapping = 3;
}

message AttributeMappings {
  repeated AttributeMapping attributes = 1;
}

message AttributeMapping {
  string key = 1 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    }
  ];
  string map_to = 2 [
    (buf.validate.field).required = true,
    (buf.validate.field).string = {
      min_len: 1
      max_len: 32
    }
  ];
}

message UpdateAttributesResponse {
  AttributeMappings attribute_mappings = 1;
}
